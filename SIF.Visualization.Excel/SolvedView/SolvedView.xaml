<UserControl x:Class="SIF.Visualization.Excel.SolvedView.SolvedView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewmodel="clr-namespace:SIF.Visualization.Excel.ViewModel"
             xmlns:model="clr-namespace:SIF.Visualization.Excel.Core"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <viewmodel:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
        <viewmodel:InverseIntToVisibilityConverter x:Key="InverseIntToVisibilityConverter" />
        <viewmodel:SeverityIgnoreToColorConverter x:Key="SeverityIgnoreToColorConverter"/>
        <viewmodel:BoolToFontWeightConverter x:Key="BooleanToVisibilityConverter"/>
        <viewmodel:TypeConverter x:Key="TypeConverter"/>
        <viewmodel:TypeReadToImageConverter x:Key="TypeReadToImageConverter"/>
        <viewmodel:VisibleToTextConverter x:Key="VisibleToTextConverter"/>

        <!-- Style for the listBox Items -->
        <Style TargetType="ListBoxItem" x:Key="listBoxItemStyle">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin"  Value="0 2 5 2"/>
        </Style>

        <!-- Style for the grouped listBox Items -->
        <Style TargetType="ListBoxItem" x:Key="groupedListBoxItemStyle">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
        </Style>

        <!--Style for the expander for the grouped violations-->
        <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border" Background="#EEEEEE">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="#CCCCCC" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="#AAAAAA" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedArrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid>
                    <Path x:Name="CollapsedArrow"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 4 4 L 8 0 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="#333333" />
                        </Path.Fill>
                    </Path>
                    <Path x:Name="ExpandededArrow"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 4 L 4 0 L 8 4 Z"
                          Visibility="Collapsed">
                        <Path.Fill>
                            <SolidColorBrush Color="#333333" />
                        </Path.Fill>
                    </Path>
                </Grid>
            </Border>
        </ControlTemplate>
        <Style x:Key="FlatExpanderStyle" TargetType="Expander">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow" Height="0" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border"
                                    Grid.Row="0"
                                    BorderThickness="1"
                                    CornerRadius="2,2,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton Grid.Column="1"
                                                  IsChecked="{Binding IsExpanded,
                                                  Mode=TwoWay,
                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                  OverridesDefaultStyle="True"
                                                  Template="{StaticResource ExpanderToggleButton}" />
                                    <ContentPresenter Margin="4"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <ContentPresenter Grid.Row="1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>

        <!--Message if nothing is showable-->
        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" FontSize="14" TextWrapping="WrapWithOverflow"
                   Visibility="{Binding SolvedViolations.Count, Converter={StaticResource InverseIntToVisibilityConverter}}"
                   Text="No solved violations. Please solve some violations to see them here." Foreground="#333333" Margin="0 20" />

        <ListBox x:Name="SolvedList" FontFamily="Segoe UI" FontSize="12" Visibility="{Binding SolvedViolations.Count, Converter={StaticResource IntToVisibilityConverter}}"
                 SelectedIndex="-1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                 SelectionMode="Single" VerticalAlignment="Top" SelectionChanged="ListBox_SelectionChanged" Background="Transparent"
                 BorderThickness="0" HorizontalAlignment="Stretch" ItemContainerStyle="{StaticResource listBoxItemStyle}">
            <ListBox.Resources>
                <DataTemplate DataType="{x:Type model:SingleViolation}">
                    <Grid HorizontalAlignment="Stretch" x:Name="LayoutRoot" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="7" />
                        </Grid.ColumnDefinitions>

                        <!--Severity on the right-->
                        <Rectangle Grid.RowSpan="5" Grid.Column="2" Grid.Row="0">
                            <Rectangle.Fill>
                                <SolidColorBrush>
                                    <SolidColorBrush.Color>
                                        <MultiBinding Converter="{StaticResource SeverityIgnoreToColorConverter}">
                                            <MultiBinding.Bindings>
                                                <Binding Path="Severity" />
                                                <Binding Path="ViolationState" />
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </SolidColorBrush.Color>
                                </SolidColorBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <TextBlock Text="{Binding Severity}" Grid.Column="1" FontWeight="{Binding IsRead, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Grid.Row="0" HorizontalAlignment="Right" Margin="10 0 0 5" Padding="4 0 2 2" FontSize="14">
                            <TextBlock.Background>
                                <SolidColorBrush>
                                    <SolidColorBrush.Color>
                                        <MultiBinding Converter="{StaticResource SeverityIgnoreToColorConverter}">
                                            <MultiBinding.Bindings>
                                                <Binding Path="Severity" />
                                                <Binding Path="ViolationState" />
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </SolidColorBrush.Color>
                                </SolidColorBrush>
                            </TextBlock.Background>
                        </TextBlock>

                        <!--other data-->
                        <Grid Grid.Column="0" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="typeimage" Grid.Column="0" Grid.Row="0" Margin="0 0 5 5" Height="25"
                                 Width="25" VerticalAlignment="Center" HorizontalAlignment="Left">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource TypeReadToImageConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="Rule.Type" />
                                            <Binding Path="IsRead" />
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                            <TextBlock Text="{Binding Rule.Name}" FontWeight="{Binding IsRead, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="1" Grid.Row="0"  Margin="10 0 5 5" FontSize="16" TextWrapping="Wrap"/>
                        </Grid>

                        <TextBlock Text="{Binding CausingElement}" Grid.Column="0" Grid.Row="1"
                                           FontSize="14" Margin="10 0 5 0" VerticalAlignment="Top" TextWrapping="Wrap" />

                        <!--More details expander-->
                        <Expander Name="detailExpander" Background="Transparent" HorizontalAlignment="Left" 
                                  Margin="5 0 5 0" BorderThickness="3" Grid.Row="3" Grid.ColumnSpan="2" Grid.Column="0">
                            <Expander.Style>
                                <Style TargetType="Expander">
                                    <Setter Property="IsExpanded" Value="False" />
                                    <Setter Property="Header" Value="More Details" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsExpanded,RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="Header" Value="Less Details" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Expander.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock  Margin="10 0 5 5"  TextWrapping="Wrap">
                                    <TextBlock.Inlines>
                                        <Run FontWeight="Bold" Text="Description:" />
                                        <Run Text="{Binding Description}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <TextBlock Grid.Row="1" Margin="10 0 5 5" TextWrapping="Wrap">
                                    <TextBlock.Inlines>
                                        <Run FontWeight="Bold" Text="Possible Solution:" />
                                        <Run Text="{Binding Rule.PossibleSolution}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <TextBlock Grid.Row="2" Margin="10 0 5 5" TextWrapping="Wrap">
                                    <TextBlock.Inlines>
                                        <Run FontWeight="Bold" Text="Background:" />
                                        <Run Text="{Binding Rule.Background}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <TextBlock  Grid.Row="3" Margin="10 0 5 5" TextWrapping="Wrap">
                                    <TextBlock.Inlines>
                                        <Run FontWeight="Bold" Text="Type:" />
                                        <Run Text="{Binding Rule.Type, Converter={StaticResource TypeConverter}}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <TextBlock  Grid.Row="4" Margin="10 0 5 5" TextWrapping="Wrap">
                                    <TextBlock.Inlines>
                                        <Run FontWeight="Bold" Text="First Occurrence:" />
                                        <Run Text="{Binding FirstOccurrence, StringFormat=' {0: dd MMMM yyyy, HH:mm:ss}'}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                            </Grid>
                        </Expander>
                    </Grid>
                </DataTemplate>
                <!--Template for GroupViolations-->
                <DataTemplate DataType="{x:Type model:GroupViolation}">
                    <Grid HorizontalAlignment="Stretch" x:Name="LayoutRoot" Background="Transparent" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="7" />
                        </Grid.ColumnDefinitions>

                        <!--The severity on the right-->
                        <Rectangle Grid.RowSpan="6" Grid.Column="2" Grid.Row="0">
                            <Rectangle.Fill>
                                <SolidColorBrush>
                                    <SolidColorBrush.Color>
                                        <MultiBinding Converter="{StaticResource SeverityIgnoreToColorConverter}">
                                            <MultiBinding.Bindings>
                                                <Binding Path="Severity" />
                                                <Binding Path="ViolationState" />
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </SolidColorBrush.Color>
                                </SolidColorBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <TextBlock Text="{Binding Severity}" FontWeight="{Binding IsRead, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="1" FontSize="16" Grid.Row="0" HorizontalAlignment="Right" Margin="10 0 0 5" Padding="4 0 2 2">
                            <TextBlock.Background>
                                <SolidColorBrush>
                                    <SolidColorBrush.Color>
                                        <MultiBinding Converter="{StaticResource SeverityIgnoreToColorConverter}">
                                            <MultiBinding.Bindings>
                                                <Binding Path="Severity" />
                                                <Binding Path="ViolationState" />
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </SolidColorBrush.Color>
                                </SolidColorBrush>
                            </TextBlock.Background>
                        </TextBlock>

                        <!--the other data-->
                        <Grid Grid.Column="0" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="typeimage" Grid.Column="0" Grid.Row="0" Margin="0 0 5 5" Height="25"
                                 Width="25" VerticalAlignment="Center" HorizontalAlignment="Left">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource TypeReadToImageConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="Rule.Type" />
                                            <Binding Path="IsRead" />
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                            <TextBlock Text="{Binding Rule.Name}" FontWeight="{Binding IsRead, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="1" Grid.Row="0"  Margin="10 0 5 5" FontSize="16" TextWrapping="Wrap"/>
                        </Grid>
                        <TextBlock Text="{Binding CausingElement}" Grid.Column="0" Grid.Row="1"
                                           FontSize="14" Margin="10 0 5 0" VerticalAlignment="Top" TextWrapping="Wrap" />

                        <!--the more details expander-->
                        <Expander Name="detailExpander" Background="Transparent" HorizontalAlignment="Left" 
                                  Margin="5 0 5 0" Grid.Row="3" Grid.ColumnSpan="2" Grid.Column="0">
                            <Expander.Style>
                                <Style TargetType="Expander">
                                    <Setter Property="IsExpanded" Value="False" />
                                    <Setter Property="Header" Value="More Details" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsExpanded,RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="Header" Value="Less Details" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Expander.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock  Margin="10 0 5 5"  TextWrapping="Wrap">
                                    <TextBlock.Inlines>
                                        <Run FontWeight="Bold" Text="Description:" />
                                        <Run Text="{Binding Description}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <TextBlock Grid.Row="1" Margin="10 0 5 5" TextWrapping="Wrap">
                                    <TextBlock.Inlines>
                                        <Run FontWeight="Bold" Text="Possible Solution:" />
                                        <Run Text="{Binding Rule.PossibleSolution}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <TextBlock Grid.Row="2" Margin="10 0 5 5" TextWrapping="Wrap">
                                    <TextBlock.Inlines>
                                        <Run FontWeight="Bold" Text="Background:" />
                                        <Run Text="{Binding Rule.Background}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <TextBlock  Grid.Row="3" Margin="10 0 5 5" TextWrapping="Wrap">
                                    <TextBlock.Inlines>
                                        <Run FontWeight="Bold" Text="Type:" />
                                        <Run Text="{Binding Rule.Type, Converter={StaticResource TypeConverter}}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <TextBlock  Grid.Row="4" Margin="10 0 5 5" TextWrapping="Wrap">
                                    <TextBlock.Inlines>
                                        <Run FontWeight="Bold" Text="First Occurrence:" />
                                        <Run Text="{Binding FirstOccurrence, StringFormat=' {0: dd MMMM yyyy, HH:mm:ss}'}"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                            </Grid>
                        </Expander>

                        <!--The expander for the grouped violations-->
                        <Expander Name="violationsExpander" Background="Transparent" HorizontalAlignment="Stretch" 
                                  Grid.Row="4" Grid.ColumnSpan="2" Grid.Column="0" Style="{StaticResource FlatExpanderStyle}">

                            <Expander.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="10 0 0 0" Text="Violations (" FontWeight="Bold" />
                                    <TextBlock Text="{Binding Violations.Count}" FontWeight="Bold" />
                                    <TextBlock Text=")" FontWeight="Bold" />
                                </StackPanel>
                            </Expander.Header>

                            <!--The listbox for the grouped violations-->
                            <ListBox x:Name="GroupedViolationList" FontFamily="Segoe UI" FontSize="12"
                                SelectedIndex="-1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                SelectionMode="Extended" VerticalAlignment="Top" Background="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" 
                                ItemContainerStyle="{StaticResource groupedListBoxItemStyle}" ItemsSource="{Binding Violations}"  HorizontalContentAlignment="Stretch"
                                Margin="0 0 -1 5">

                                <ListBox.Resources>
                                    <DataTemplate DataType="{x:Type model:SingleViolation}">
                                        <Grid HorizontalAlignment="Stretch" x:Name="LayoutRoot" Background="Transparent" >
                                            <Rectangle Stroke="Gray" VerticalAlignment="Top" Height="1" StrokeThickness="1" StrokeDashArray="2 4"/>

                                            <TextBlock Text="{Binding CausingElement}" FontSize="14" Margin="10 5 5 5" VerticalAlignment="Top" TextWrapping="Wrap" />

                                            <Rectangle Stroke="Gray" VerticalAlignment="Bottom" Height="1" StrokeThickness="1" StrokeDashArray="2 4"  Margin="0 -1 0 0"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.Resources>
                            </ListBox>
                        </Expander>

                    </Grid>
                </DataTemplate>
            </ListBox.Resources>
        </ListBox>
    </Grid>
</UserControl>

